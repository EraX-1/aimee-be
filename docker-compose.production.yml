version: '3.9'

services:
  # MySQL データベース（本番環境）
  mysql:
    image: mysql:8.0
    platform: linux/arm64/v8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: aimee_db
      MYSQL_USER: aimee_user  
      MYSQL_PASSWORD: Aimee2024!
    volumes:
      - mysql-data:/var/lib/mysql
      - ../aimee-db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../aimee-db/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
      - ../aimee-db/insert_operators.sql:/docker-entrypoint-initdb.d/03-insert_operators.sql
    command: >
      --innodb-buffer-pool-size=2G
      --max-connections=200
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 軽量LLM専用コンテナ（qwen2:0.5b）
  ollama-light:
    image: ollama/ollama:latest
    platform: linux/arm64/v8
    restart: always
    volumes:
      - ollama-light-models:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=8
      - OLLAMA_ACCELERATION=metal
      - OLLAMA_MEMORY_LIMIT=4GB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 6G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # メインLLM専用コンテナ（gemma:7b）
  ollama-main:
    image: ollama/ollama:latest
    platform: linux/arm64/v8
    restart: always
    volumes:
      - ollama-main-models:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_ACCELERATION=metal
      - OLLAMA_MEMORY_LIMIT=12GB
      - OLLAMA_BATCH_SIZE=512
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 16G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ChromaDB（ベクトルデータベース）
  chromadb:
    image: chromadb/chroma:latest
    platform: linux/arm64/v8
    restart: always
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=token
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMADB_AUTH_TOKEN}
      - CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER=X-Chroma-Token
      - ANONYMIZED_TELEMETRY=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis（キャッシュ）
  redis:
    image: redis:7-alpine
    platform: linux/arm64/v8
    restart: always
    volumes:
      - redis-data:/data
    command: >
      redis-server 
      --appendonly yes
      --maxmemory 4gb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API (FastAPI)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
      args:
        - BUILD_ENV=production
    platform: linux/arm64/v8
    restart: always
    env_file:
      - .env.production
    environment:
      - DATABASE_URL=mysql+pymysql://aimee_user:Aimee2024!@mysql:3306/aimee_db
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - OLLAMA_LIGHT_HOST=ollama-light
      - OLLAMA_LIGHT_PORT=11434
      - OLLAMA_MAIN_HOST=ollama-main
      - OLLAMA_MAIN_PORT=11434
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama-light:
        condition: service_healthy
      ollama-main:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    command: >
      gunicorn app.main:app 
      --workers 4
      --worker-class uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:8000
      --access-logfile -
      --error-logfile -
      --max-requests 1000
      --max-requests-jitter 50
    deploy:
      resources:
        limits:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Nginx（リバースプロキシ）
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql-data:
    driver: local
  chroma-data:
    driver: local
  redis-data:
    driver: local
  ollama-light-models:
    driver: local
  ollama-main-models:
    driver: local
  nginx-cache:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16